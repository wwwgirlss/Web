@model IEnumerable<MCSDD22.Models.Products>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    int c = 0;
}

@*在View上自訂helper*@
@helper IsActive(int c)
{


    if (c == 0)
    {
        @:active
    }

}


<div id="adForProducts" class="carousel slide" data-ride="carousel">
    <ol class="carousel-indicators">
        <li data-target="#adForProducts" data-slide-to="0" class="active"></li>
        @for (int i = 1; i < Model.Count(); i++)
        {

            <li data-target="#adForProducts" data-slide-to="@i"></li>
            //@i會帶入c++傳過來的值
        }

    </ol>
    <div class="carousel-inner">

        @foreach (var item in Model)
        {
            <div class="carousel-item @IsActive(c)">
                @*//@IsActive(c)是自訂helper*@

                <img src="@Url.Action("GetImage", "Products", new { id = item.ProductID })" class="d-block w-100" style="height:400px" />
                <div class="carousel-caption d-none d-md-block">
                    <h5 class="text-truncate bg-dark">@item.ProductName</h5>
                    <p class="text-truncate bg-dark">@item.Description</p>
                </div>
            </div>
            c++; //傳到 @i里
        }
    </div>
    <button class="carousel-control-prev" type="button" data-target="#adForProducts" data-slide="prev">
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        <span class="sr-only">Previous</span>
    </button>
    <button class="carousel-control-next" type="button" data-target="#adForProducts" data-slide="next">
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
        <span class="sr-only">Next</span>
    </button>
</div>

<div class="row">

    @foreach (var item in Model)
    {
        <div class="col-lg-4  p-1">
            <div class="card border-dark ">
                <a href="@Url.Action("Display", new { id=item.ProductID})">
                    <img src="@Url.Action("GetImage","Products",new { id=item.ProductID})" class="img-fluid pt-2" /> @*p-padding*@

                    <div class="card-body">
                        <input type="hidden" value="@item.ProductID" class="PID" />
                        <h5 class="text-dark">
                            <strong class="PName">@item.ProductName</strong>
                        </h5>
                        <h3 class="text-danger text-center Price" p="@item.UnitPrice">
                            <i class="bi bi-gem"></i>  @Html.DisplayFor(modelItem => item.UnitPrice)
                        </h3>
                        @*<p> @item.Description</p>*@
                    </div>
                </a>
                <div class="p-2">

                    <p>
                        <button class="btn btn-secondary btn-block d-block addCart">加入購物車  <i class="bi bi-cart3"></i> </button>
                    </p>
                </div>
            </div>
        </div>
    }
    @*//迴圈裡面取ID要通通不一樣///寫class可以很多個//要抓的通通設class*@    @*//會讀helper@Html.DisplayFor //不會讀helper@item.UnitPrice*@
</div>

<span id="MyCart">

    <a href="@Url.Action("MyCart")">
        <i class="bi bi-cart4"></i>
        <span class="badge badge-light text-white bg-danger" style="font-size:1.3rem"></span>
    </a>


</span>

@section css{
    <style>
        a:hover {
            text-decoration: none;
        }

        #MyCart {
            position: fixed;
            right: 60px;
            bottom: 70px;
            font-size: 3rem;
        }

            #MyCart > span {
                font-size: 1rem;
            }
    </style>
}
@*購物車JS寫法*@
@section scripts{
    <script>
        var cart = [];

        if (localStorage.getItem("cart")) {
            cart = JSON.parse(localStorage.getItem("cart"));
        }

        $('#MyCart .badge').text(cart.length);//購物小車新增時數字跳變
        $('.addCart').click(function () {
            let product = $(this).closest('.card');
            let newPID = product.find('.PID').val();

            let foundItem = cart.find(item => item.PID == newPID);

            if (foundItem === undefined) {
                setCart(product);
            }
            else {
                foundItem.Amount += 1;
                alert("商品數量已更新");
            }

            //底下寫地太冗長了,改個寫法
            //if (cart.length > 0) {
            //    for (let i in cart) {
            //        if (cart[i]["PID"] == newPID) {
            //            //代表此商品已經在購物車中,因此將數量加1
            //            cart[i]["Amount"] += 1;
            //            alert("商品數量已更新");
            //            break;
            //        }
            //        else if (cart.length-1 == i) {
            //            setCart(product);
            //        }
            //    }
            //}
            //else {
            //    setCart(product);
            //}
            console.log(cart);

            localStorage.setItem("cart", JSON.stringify(cart));

        })

        //制新物件陣列
        //let newItem = {
        //    PID: product.find('.PID').val(),
        //    PName: product.find('.PName').text(),
        //    Price: product.find('.Price').attr('p'),
        //    Amount: 1
        //}

        //==true ===flase

        //********重複寫的獨立成funtion //需要參數的funtion(m =>m.xxx == flase)把另一個函數當作參數傳進去(委派)「λ」(Lambda)寫法//若是兩個參數(m,n)*********
        function setCart(product) {
            let newItem = {
                PID: product.find('.PID').val(),
                PName: product.find('.PName').text(),
                Price: product.find('.Price').attr('p'),
                Amount: 1
            }

            cart.push(newItem);
            $('#MyCart .badge').text(cart.length); //購物小車新增時數字跳變
            //存在網頁空間//F5就會消失
            localStorage.setItem("cart", JSON.stringify(cart));

        }
    </script>


}

