@model _04ViewModel.Models.tEmployee

@{
    ViewBag.Title = "Create";
    var deptid = Request.QueryString["fDepId"];
}

<h2>員工管理</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4 style="color:blue">新增員工資料</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.fEmpId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fEmpId, new { htmlAttributes = new { @class = "form-control", placeholder = "(Ex:A01)" } })
                @Html.ValidationMessageFor(model => model.fEmpId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.fName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.fName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.fPhone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fPhone, new { htmlAttributes = new { @class = "form-control", placeholder = "(Ex:07-1234567)" } })
                @Html.ValidationMessageFor(model => model.fPhone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.fDepId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.fDepId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.fDepId, "", new { @class = "text-danger" })*@
                @*//class="form-control"讓網頁的HTML頁面跟bootstrap一樣*@

                <select id="fDepId" name="fDepId" class="form-control">
                    @foreach (var item in ViewBag.Dept)
                    {
                        <option value="@item.fDepId" @(item.fDepId.ToString() == deptid ? "selected" : "")>@item.fDepName</option>


                        @*if (item.fDepId.ToString() == deptid)
                              {
                               <option value="@item.fDepId" selected>@item.fDepName</option>
                              }
                            else
                              {
                               <option value="@item.fDepId" >@item.fDepName</option>

                              }*@

                    }
                </select>


            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="送出資料" class="btn btn-warning" />
                <h4 class="text-danger">@ViewBag.Msg</h4>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("回部門列表", "Index", new { deptId = deptid }, new { @class = "btn primary" })
</div>

@*<script src="~/Scripts/jquery-3.4.1.min.js"></script>*@
@*引入函式庫寫法*@
@section scripts{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}

@section css{
    <style>
        h4 {
            background-color: yellow;
        }
    </style>
}

